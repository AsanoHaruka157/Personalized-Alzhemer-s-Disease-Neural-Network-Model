fmpTime: 2025-08-26 19:10:59
This is a simple FNN model multiples polynomial model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: inffnnTime: 2025-08-27 13:12:41
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.1235fnnTime: 2025-08-27 13:17:40
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0447fnnTime: 2025-08-27 13:28:31
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0453sfTime: 2025-08-27 15:34:50
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0454sfTime: 2025-08-27 15:46:21
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 7.5681sfTime: 2025-08-27 15:50:18
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0935sfTime: 2025-08-27 16:01:21
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0440sfTime: 2025-08-27 16:04:36
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0432sfTime: 2025-08-27 16:07:44
This is a simple FNN model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0430fmpTime: 2025-08-27 16:22:26
This is a simple FNN model multiples polynomial model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0431fmpTime: 2025-08-27 16:31:58
This is a simple FNN model multiples polynomial model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0429fppTime: 2025-08-27 16:55:49
This is a simple FNN model plus polynomial model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0426spTime: 2025-08-27 18:05:21
Polynomial-only model with fixed pretrained DPS parameters.Model structure:
ODEModel()MSE: 0.0421spTime: 2025-08-27 18:20:26
Polynomial-only model with fixed pretrained DPS parameters.Model structure:
ODEModel()MSE: 0.0421sfTime: 2025-08-27 18:23:56
FNN-only model with fixed pretrained DPS parameters.Model structure:
ODEModel(
  (net): Sequential(
    (0): Linear(in_features=4, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=4, bias=True)
    (5): Tanh()
  )
)MSE: 0.0431